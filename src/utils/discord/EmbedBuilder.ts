import {MessageComponents, MessageSendOptions} from "@type/discord";
import {InteractionCallbackResponse} from "discord.js";
import type {EmbedData, Message} from "discord.js";
import {Interact, Logger, MessageUtils} from "@utils";

/**
 * @author SNIPPIK
 * @description —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥—É–º–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
 * @class EmbedBuilder
 */
export class EmbedBuilder {
    /**
     * @description –í—Ä–µ–º–µ–Ω–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å ComponentData –∏–ª–∏ –∫–ª–∞—Å—Å–æ–º ActionRowBuilder –≤ array
     * @readonly
     * @public
     */
    public readonly components: Array<MessageComponents> = [];

    /**
     * @description –í—Ä–µ–º–µ–Ω–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å embed json data –≤ array
     * @readonly
     * @public
     */
    public readonly embeds: Array<EmbedData> = [];

    /**
     * @description –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é
     * @readonly
     * @private
     */
    private readonly _menu: {
        /**
         * @description –°–∞–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
         */
        pages: any[];

        /**
         * @description –¢–∏–ø –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
         */
        type: "table" | "selector";

        /**
         * @description –ù–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
         */
        page: number;
    } = {
        pages: [],
        type: null,
        page: 0
    };

    /**
     * @description –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
     * @public
     */
    public time: number = 15e3;

    /**
     * @description –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª
     * @param interaction
     * @public
     */
    public set send(interaction: Interact) {
        const options = {embeds: this.embeds, components: this.components, withResponse: !!this.promise || !!this.callback};

        interaction.send(options)
            .then((message) => {
                // –ï—Å–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç –Ω–µ —É–¥–∞–ª–æ—Å—å, —Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
                if (!message) return;

                // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –≤—Ä–µ–º—è –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ
                if (this.time !== 0) MessageUtils.delete(message, this.time);

                // –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é –µ—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –Ω–µ–≥–æ
                if (this._menu.pages.length > 0) this.constructor_menu(message instanceof InteractionCallbackResponse ? message.resource.message : message);

                // –ï—Å–ª–∏ –Ω–∞–¥–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ
                if (this.promise) this.promise(new Interact(message));
            })
            .catch((err) => {
                // –ù–µ –¥–∞–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–≤—Ç–æ—Ä–Ω–æ
                if (interaction._hookReply) return;

                // –ï—Å–ª–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π
                // –≠—Ç–∞ –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –∫–æ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–µ–≤—ã—Å–∏–ª–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
                if (`${err}`.match(/Unknown interaction|Interaction has already been acknowledged/)) {
                    interaction._hookReply = true;

                    setTimeout(() => {
                        this.send = interaction;
                        interaction._hookReply = false;
                    }, 200);

                    Logger.log("ERROR", "[DiscordAPI]: Error interaction, resend...");
                    return;
                }

                // –ï—Å–ª–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
                // –≠—Ç–∞ –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –∫–æ–≥–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –∏–º–µ–Ω–Ω–æ reply
                else if (`${err}`.match(/Invalid Webhook Token/)) {
                    Logger.log("ERROR", "[DiscordAPI]: Error webhook token, ignoring!");
                    return;
                }

                console.error(err);
            });
    };

    /**
     * @description –§—É–Ω–∫—Ü–∏—è –ø–æ–∑–≤–æ–ª—è—é—â–∞—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
     * @public
     */
    private callback: (message: Message, pages: any[], page: number, embed: EmbedData, selected?: any) => void;

    /**
     * @description –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
     * @public
     */
    private promise: (msg: Interact) => void;

    /**
     * @description –î–æ–±–∞–≤–ª—è–µ–º embeds –≤ –±–∞–∑—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
     * @param data - MessageBuilder["configuration"]["embeds"]
     * @public
     */
    public addEmbeds = (data: EmbedData[]) => {
        Object.assign(this.embeds, data);

        for (let embed of this.embeds) {
            // –î–æ–±–∞–≤–ª—è–µ–º —Ü–≤–µ—Ç –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é
            if (!embed.color) embed.color = 258044;

            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º fields, –Ω—É –º–∞–ª–æ –ª–∏
            if (embed.fields?.length > 0) embed.fields = embed.fields.filter((item) => !!item);
        }

        return this;
    };

    /**
     * @description –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param time - –í—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö, –µ—Å–ª–∏ —É–∫–∞–∑–∞—Ç—å 0 —Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ
     * @public
     */
    public setTime = (time: number) => {
        this.time = time;
        return this;
    };

    /**
     * @description –î–æ–±–∞–≤–ª—è–µ–º components –≤ –±–∞–∑—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
     * @param data - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
     * @public
     */
    public addComponents = (data: MessageSendOptions["components"]) => {
        Object.assign(this.components, data);
        return this;
    };

    /**
     * @description –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param func - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ
     * @public
     */
    public setPromise = (func: EmbedBuilder["promise"]) => {
        this.promise = func;
        return this;
    };

    /**
     * @description –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –∫–Ω–æ–ø–∫–∏
     * @param func - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ
     * @public
     */
    public setCallback = (func: EmbedBuilder["callback"]) => {
        this.callback = func;
        return this;
    };

    /**
     * @description –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é
     * @param options - –°–∞–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
     * @public
     */
    public setMenu = (options: EmbedBuilder["_menu"]) => {
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        if (options.type === "table") {
            this.components.push(
                {
                    type: 1, components: [
                        MessageUtils.createButton({emoji: {name: "‚¨Ö"},  id: "menu_back"}),
                        MessageUtils.createButton({emoji: {name: "‚û°"},  id: "menu_next"}),//{name: "‚û°"},  "menu_next", 2, false),
                        MessageUtils.createButton({emoji: {name: "üóëÔ∏è"}, id: "menu_cancel", style: 4}),//{name: "üóëÔ∏è"}, "menu_cancel", 4, false)
                    ]
                }
            )
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞
        else {
            this.components.push(
                {
                    type: 1, components: [
                        MessageUtils.createButton({emoji: {name: "‚¨Ö"},  id: "menu_back"}),
                        MessageUtils.createButton({emoji: {name: "‚úîÔ∏è"}, id: "menu_select", style: 3}),
                        MessageUtils.createButton({emoji: {name: "‚û°"},  id: "menu_next"}),
                        MessageUtils.createButton({emoji: {name: "üóëÔ∏è"}, id: "menu_cancel", style: 4})
                    ]
                }
            )
        }

        Object.assign(this._menu, options);
        return this;
    };

    /**
     * @description –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
     * @param msg      - –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
     * @private
     */
    private constructor_menu = (msg: Message) => {
        let {pages, page} = this._menu;

        // –°–æ–∑–¥–∞–µ–º —Å–±–æ—Ä—â–∏–∫
        const collector = msg.createMessageComponentCollector({
            time: 60e3, componentType: 2,
            filter: (click) => click.user.id !== msg.client.user.id
        });

        // –°–æ–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–∂–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        collector.on("collect", (i) => {
            // –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            if (i.customId === "menu_back") {
                // –î–µ–ª–∞–µ–º –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                if (page === 0) page = pages.length;
                else if (pages.length === 1) return;
                else page--;
            }

            // –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            else if (i.customId === "menu_next") {
                // –î–µ–ª–∞–µ–º –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                if (page === pages.length) page = 0;
                else if (pages.length === 1) return;
                else page++;
            }

            // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç—Ä–µ–∫
            else if (i.customId === "menu_select") {
                if (pages.length === 1) return;

                this.callback(msg, pages, page, this.embeds[0], pages[page]);
                try { return msg.delete(); } catch { return; }
            }

            // –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
            else if (i.customId === "menu_cancel") {
                try { return msg.delete(); } catch { return; }
            }

            return this.callback(msg, pages, page, this.embeds[0]);
        });
    };
}